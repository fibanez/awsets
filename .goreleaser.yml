# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    dir: ./cmd/awsets
archives:
  - replacements:
      386: i386
      amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: ""
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Note: it can only be one: either github or gitlab or gitea
  github:
    owner: trek10inc
    name: awsets

  # IDs of the archives to use.
  # Defaults to all.
#  ids:
#    - foo
#    - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: false

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  name_template: "v{{.Version}}"

  # You can disable this pipe in order to not upload any artifacts to
  # GitHub.
  # Defaults to false.
  disable: false

  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
#  extra_files:
#    - glob: ./path/to/file.txt
#    - glob: ./glob/**/to/**/file/**/*
#    - glob: ./glob/foo/to/bar/file/foobar/override_from_previous

brews:
  - tap:
      owner: trek10inc
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    commit_author:
      name: trek10-bot
      email: trek10-bot-github@trek10.com
    folder: Formula
    homepage: https://github.com/fibanez/awsets
    description: A utility for crawling an AWS account and exporting all its resources for further analysis.